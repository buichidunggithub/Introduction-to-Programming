BÀI TẬP TUẦN 09 CHUỖI KÍ TỰ NOV

15/11/2017  MẢNG

Họ và tên: Bùi Chí Dũng

MSSV: 1712364

Lớp: 17CTT3A

Ca thực hành: Chiều thứ 2, 14g45 PMT_NDT 4.1

Chuỗi ký tự Bài 1: Nhập chuỗi ký tự s Ví dụ: Char s[100] = “Hello string in Programming c” 
a. Đếm số lượng khoảng trắng của chuỗi s 
b. In ra từ đầu tiên của chuỗi 
Ví dụ:  Từ thứ nhất của chuỗi s là “Hello”, các từ cách nhau 1 khoảng trắng 
c. In ra từ thứ i của chuỗi s 
d. Viết hoa các ký tự đầu tiên của một từ nếu nó là chữ thường.  
Mảng 2 chiều 
Bài 2: Nhập ma trận kích thước m x n (m,n là nguyên dương), với m: kích thước dòng, n: kích thước cột Viết các hàm sau: 
a. Hàm tính tổng dòng: int TongDong(int a[] [maxc], int m, int n, int d); d: dòng 
b. Hàm tính tổng cột 
c. Hàm tính tổng đường chéo chính: int TongDCChinh(int a[][maxc], int n) 
d. Hàm tính tổng trên đường chéo chính 
e. Hàm tính tổng dưới đường chéo chính 
f. Hàm tính tổng trên đường chéo phụ 
g. Tìm điểm yên ngựa trên ma trận Với: điểm yên ngựa trên ma trận là điểm thoả: vừa nhỏ nhất trên hàng vừa lớn nhất trên cột  6 7 8 5 2 3 3 4 6 6 là yên ngựa  
h. * Sắp xếp ma trận với các dòng tăng dần  
i. * Sắp xếp ma trận với cột giảm dần j. ** Sắp xếp ma trận theo thứ tự tăng dần Kiểu dữ liệu có cấu trúc 
Bài 3:  
a. Khai báo kiểu dữ liệu phân số 
b. Nhập/Xuất phân số 
c. Tìm ước số chung lớn nhất hai số nguyên (tử số và mẫu số). 
d. Rút gọn phân số e. Kiểm tra phân số tối giản 
f. Tính tổng, hiệu, tích thương hai phân số, kết quả trả về là phân số tối giản.  
Bài 4 : Điểm trong mặt phẳng Oxy 
a. Khai báo kiểu dữ liệu điểm (SDiem) 
b. Nhập / Xuất toạ độ điểm 
c. Tính khoảng cách giữa  điểm 
d. Tìm điểm đối xứng qua gốc toạ độ / trục Ox /Oy

BÀI LÀM:

Bài 1:
#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<ctype.h>
int i, j, dem=0;
char s[50],s1[50][50], *p;

void demPt(char s[50], int &alp, int &spa)		//Cau a: Dem so luong khoang trang cua chuoi
{
	int len=strlen(s);
	alp=0; spa=0;
	for(i=0; i<len; i++)
		if(isalpha(s[i]))
			alp++;
		else if(s[i]==' ')
		spa++;

}
void inHoa()					//Cau d: Viet hoa chu cai dau cua moi tu
{
	int len=strlen(s);
	s[0]=toupper(s[0]);
	for(i=0; i<len; i++)
		if(s[i]==' ')
		s[i+1]=toupper(s[i+1]);
}
void tach()						//Cau b: in ra tu dau tien cua chuoi
{
	p=strtok(s, " ");
	while(p!='\0')
	{
		strcpy(s1[dem],p);
		dem++;
		p=strtok(NULL," ");
	}
}
void inKq()						//Cau b: in tu dau tien cua chuoi
{
	for(i=0; i<dem; i++)
	{
		printf("%s ", s1[i]);
	}
}


int main(){
	int chu, cach, x;
	printf("Nhap chuoi: ");
	gets(s);
	printf("Chuoi duoc viet hoa chu cai dau nhu sau: ");
	inHoa();
	int len=strlen(s);
	demPt(s, chu, cach);
	tach();
	inKq();
	printf("\nSo ki tu chu: %d\n", chu);
	printf("\nSo khoang trang: %d\n", cach);
	printf("\nTu dau tien cua chuoi la: %s\n", s1);
	getch();
	return 0;
}




Bài 2: 
a. Hàm tính tổng dòng
int TongDong(int a[][maxc],int m,int n, int d)	{			
 
 	for(int i=0;i<m;i++)   
  {
   d=0;
     for(int j=0;j<n;j++)
      {
      d=d+a[i][j];
      }
     printf("\n Dong thu %d co tong la: %d",i+1,d); 
   }
}
b. Hàm tính tổng cột
int TongCot(int a[][maxc],int m, int n, int c){				
	for(int j=0;j<n;j++)	
  {
   c=0;
     for(int i=0;i<m;i++)
      {
      c=c+a[i][j];
      }
     printf("\n Cot thu %d co tong la: %d",j+1,c); 
   }

}
c. Hàm tính tổng đường chéo chính
 void TongDCChinh(int a[][maxc], int n){					
 	for(int i=0; i<n; i++)
 		for(int j=0; j<n; j++){
 			if(i==j)
 			tongc+=a[i][j];
		 }
	printf("\nTong duong cheo chinh la: %d\n", tongc);
 }
d. Hàm tính tổng trên đường chéo chính
int TongTrenC(int a[][maxc],int m,int n){					
 int s=0;
 	for(int i=0;i<n;i++){
  		for(int j=0;j<m;j++){
   			if(i<j)
    	s+=+a[i][j];

 		}
 	}
	  printf("Tong tren cua duong cheo chinh la: %d\n", s);	
 } 
e. Hàm tính tổng dưới đường chéo chính
int TongDuoiC(int a[][maxc], int m, int n){				
int s=0;
 	for(int i=0;i<n;i++){
  		for(int j=0;j<m;j++){
  			if(i>j)
  		s+=a[i][j];

 		}
 	}
 	printf("Tong duoi cua duong cheo chinh la: %d\n", s);
 }
f. Hàm tính tổng trên đường chéo phụ
int TongTrenP(int a[][maxc], int m, int n ){			
 	int s=0;
 	for(int i=0; i<n; i++)
 		for(int j=0; j<n; j++){
 			if(i+j<n-1)
 			s+=a[i][j];
		 }
	printf("Tong tren duong cheo phu la: %d\n", s);
 }
g. Tìm điểm yên ngựa trên ma trận
 
int DiemYenNgua(int a[][maxc],int m, int n){			
	for (int k = 0; k < m; k++)
	{
		int temp = a[k][0];
		for (int h = 0; h < n; h++)
			if (temp > a[k][h])
				temp = a[k][h];
		int dem = 0;
		for (int h = 0; h < n; h++)
		{
			if (temp == a[k][h])
			{
				for (int l = 0; l < m; l++)
					if (temp < a[l][h])
						dem++;
			}
		}
		if (dem == 0)	printf("diem yen ngua la: %d\n", temp);
	}
	return 0;
}


Bài 3:
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
struct phanso
{
	int tu, mau;
}
 PhanSo1,PhanSo2;
		// Tim UCLN cua tu va mau
int UCLN(int x, int y)
{
	int temp = 0;
	for (int k = 1; k <= x; k++)
		if (x%k == 0 && y%k == 0)
			temp = k;
	return temp;
}
		// Nhap phan so x/y
void nhapPS(int &x, int &y)
{
	printf("Nhap tu so: ");
	scanf("%d", &x);
	printf("Nhap mau so: ");
	scanf("%d", &y);
	if (y == 0)
	{
		printf("Vui long nhap lai\n");
		return nhapPS(x, y);
	}
}
		// Xuat phan so x/y
void xuatPS()
{
	printf("%d/%d\n", PhanSo1.tu, PhanSo1.mau);
}
		// Rut gon phan so x/y
void rutgon(int x, int y)
{
	int temp = 0;
	for (int k = 1; k <= abs(x); k++)
		if (x%k == 0 && y%k == 0)
			temp = k;
	printf("%d/%d\n", x / temp, y / temp);
}
		// Kiem tra xem x/y co toi giam chua
void Kiemtra(int x, int y)
{
	int temp = 0;
	for (int k = 2; k <= abs(x); k++)
		if (x%k == 0 && y%k == 0)
			temp++;
	if (temp == 0) printf("Day la phan so toi gian\n");
	else printf("Phan so này chua toi giam\n");
}
		// Tinh tong, hieu, tich, thuong
void Tinh(int x, int y, int m, int n){
	int tu,mau;
	tu = x*n + m*y;
	mau = y*n;
	printf("Tong = ");
	rutgon(tu, mau);
	tu = x*n - m*y;
	mau = y*n;
	printf("Hieu = ");
	rutgon(tu, mau);
	tu = x*m;
	mau = y*n;
	printf("Tich = ");
	rutgon(tu, mau);
	tu = x*n;
	mau = y*m;
	printf("Thuong = ");
	rutgon(tu, mau);
}
int main(){
	nhapPS(PhanSo1.tu,PhanSo1.mau);
	xuatPS();
	printf("Uoc chung lon nhat cua tu va mau la: ");
	printf("%d\n",UCLN(PhanSo1.tu, PhanSo1.mau));
	printf("Rut gon:\n");
	rutgon(PhanSo1.tu, PhanSo1.mau);
	Kiemtra(PhanSo1.tu, PhanSo1.mau);
	nhapPS(PhanSo1.tu, PhanSo1.mau);
	nhapPS(PhanSo2.tu, PhanSo2.mau);
	Tinh(PhanSo1.tu, PhanSo1.mau, PhanSo2.tu, PhanSo2.mau);
	system("pause");
	return 0;
}
Bài 4:
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
struct SDiem
{
	int x, y;
} Diem1,Diem2;

		//Nhap diem (x,y)
void nhapDiem(int &x, int &y)
{
	printf("Nhap hoanh do x: ");
	scanf("%d", &x);
	printf("Nhap tung do y: ");
	scanf("%d", &y);
	
}
		// Xuat diem (x,y)
void xuatDiem(int x,int y) 
{
	printf("Diem co toa do la: (%d;%d)\n", x, y);
}
		// Tim diem doi xung qua tam, cac truc toa do
void Timdiem(int x, int y)
{	
	printf("Diem doi xung qua goc toa do: (%d;%d)\n", -x, -y);
	printf("Diem doi xung qua truc Ox: (%d;%d)\n", x, -y);
	printf("Diem doi xung qua truc Oy: (%d,%d)\n", -x, y);
}
		// Tinh khoang cach giua 2 diem
double khoangcach(int x, int y, int m, int n)
{
	double temp;
	temp = sqrt((x - m)*(x - m) + (y - n)*(y - n));
	return temp;
}
int main(){
	printf("Nhap 2 diem de tim khoang cach:\n");
	nhapDiem(Diem1.x, Diem1.y);
	xuatDiem(Diem1.x, Diem1.y);
	nhapDiem(Diem2.x, Diem2.y);
	xuatDiem(Diem2.x, Diem2.y);
	printf("khoang cach giua 2 diem do la: %.2lf\n", khoangcach(Diem1.x, Diem1.y, Diem2.x, Diem2.y));
	printf("Nhap diem muon tim diem doi xung:\n");
	nhapDiem(Diem1.x, Diem1.y);
	Timdiem(Diem1.x, Diem1.y);
	system("pause");
	return 0;
}



